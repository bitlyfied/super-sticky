{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Input","Stuff","fixed","SuperSticky","children","position","height","ghostEl","useRef","contentEl","adjust","fixedWorking","current","getBoundingClientRect","top","style","bottom","scrollTop","window","pageYOffset","document","documentElement","visualViewport","useEffect","setInterval","clearInterval","ref","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2LAGA,SAASA,IACP,OACE,8BACE,4BAKN,SAASC,IACP,OACE,6hBASE,cAACD,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,OAoBN,IACIE,GAAQ,EAEZ,SAASC,EAAT,GAAmE,IAA5CC,EAA2C,EAA3CA,SAA2C,IAAjCC,gBAAiC,MAAtB,MAAsB,MAAfC,cAAe,MAAN,GAAM,EAE1DC,EAAUC,iBAAO,MACjBC,EAAYD,iBAAO,MAEzB,SAASE,IACP,IAAMC,EAA+D,IAAhDJ,EAAQK,QAAQC,wBAAwBC,IAEzDZ,IAAUS,GACZF,EAAUG,QAAQG,MAAMV,SAAW,WACnCH,GAAQ,IACEA,GAASS,IACnBF,EAAUG,QAAQG,MAAMV,SAAW,QACnB,OAAZA,EACFI,EAAUG,QAAQG,MAAMD,IAAM,EAE9BL,EAAUG,QAAQG,MAAMC,OAAS,EAGnCd,GAAQ,GAGV,IAAMe,EAAYC,OAAOC,aAAeC,SAASC,gBAAgBJ,UAE5Df,IACa,OAAZG,EACFI,EAAUG,QAAQG,MAAMD,IAAMG,EAAY,KACrB,UAAZZ,IACTI,EAAUG,QAAQG,MAAMD,IACtBG,EAAYC,OAAOI,eAAehB,OAASA,EAAS,OAK5DiB,qBAAU,WAER,OADcC,YAAYd,EAlCV,KAmCT,WACLe,cApCc,QAsCf,IAEH,IAAIV,EAAQ,CAAET,UAOd,MANgB,OAAZD,EACFU,EAAMD,IAAM,MAEZC,EAAMC,OAAS,MAIf,qCACE,qBACEU,IAAKnB,EACLoB,UAAU,qBACVZ,MAAO,CAAET,YAEX,qBAAKoB,IAAKjB,EAAWkB,UAAU,uBAAuBZ,MAAOA,EAA7D,SACGX,OAMMwB,MAhFf,WACE,OACE,sBAAKD,UAAU,MAAf,UACE,cAACxB,EAAD,CAAaE,SAAS,MAAtB,iBACA,cAACJ,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,IACA,cAACE,EAAD,CAAaE,SAAS,SAAtB,wBC3BSwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASqB,eAAe,SAM1BZ,K","file":"static/js/main.73dbf131.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef, forwardRef } from \"react\";\nimport \"./App.css\";\n\nfunction Input() {\n  return (\n    <div>\n      <input></input>\n    </div>\n  );\n}\n\nfunction Stuff() {\n  return (\n    <div>\n      The cat (Felis catus) is a domestic species of small carnivorous\n      mammal.[1][2] It is the only domesticated species in the family Felidae\n      and is often referred to as the domestic cat to distinguish it from the\n      wild members of the family.[4] A cat can either be a house cat, a farm cat\n      or a feral cat; the latter ranges freely and avoids human contact.[5]\n      Domestic cats are valued by humans for companionship and their ability to\n      hunt rodents. About 60 cat breeds are recognized by various cat\n      registries.[6]\n      <Input />\n      <Input />\n      <Input />\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <SuperSticky position=\"top\">Top</SuperSticky>\n      <Stuff />\n      <Stuff />\n      <Stuff />\n      <Stuff />\n      <Stuff />\n      <Stuff />\n      <SuperSticky position=\"bottom\">Bottom</SuperSticky>\n    </div>\n  );\n}\n\nlet stickyTimer = null;\nlet fixed = true;\n\nfunction SuperSticky({ children, position = \"top\", height = 35 }) {\n  const frequency = 300;\n  const ghostEl = useRef(null);\n  const contentEl = useRef(null);\n\n  function adjust() {\n    const fixedWorking = ghostEl.current.getBoundingClientRect().top === 0;\n\n    if (fixed && !fixedWorking) {\n      contentEl.current.style.position = \"absolute\";\n      fixed = false;\n    } else if (!fixed && fixedWorking) {\n      contentEl.current.style.position = \"fixed\";\n      if (position == \"top\") {\n        contentEl.current.style.top = 0;\n      } else {\n        contentEl.current.style.bottom = 0;\n      }\n\n      fixed = true;\n    }\n\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n\n    if (!fixed) {\n      if (position == \"top\") {\n        contentEl.current.style.top = scrollTop + \"px\";\n      } else if (position == \"bottom\") {\n        contentEl.current.style.top =\n          scrollTop + window.visualViewport.height - height + \"px\";\n      }\n    }\n  }\n\n  useEffect(() => {\n    stickyTimer = setInterval(adjust, frequency);\n    return () => {\n      clearInterval(frequency);\n    };\n  }, []);\n\n  let style = { height };\n  if (position == \"top\") {\n    style.top = \"0px\";\n  } else {\n    style.bottom = \"0px\";\n  }\n\n  return (\n    <>\n      <div\n        ref={ghostEl}\n        className=\"super-sticky_ghost\"\n        style={{ height }}\n      ></div>\n      <div ref={contentEl} className=\"super-sticky_content\" style={style}>\n        {children}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}